@model library_prototype.Models.MultipleModel.ReturnTabVM

<script>
    function RTMessage(error, message) {
        if (error == false) {
            UIkit.notify(message, { status: 'success', timeout: 5000, pos: 'bottom-right' });
        }
        else if (error == true) {
            UIkit.notify(message, { status: 'warning', timeout: 0, pos: 'bottom-right' });
        }
    }
    @if (Model.Error != null)
    {
        foreach (var error in Model.Message)
        {
            @:RTMessage(@Model.Error.ToString().ToLower(), @Html.Raw("'"+ error+"'"));
        }
    }
</script>
<script>
    function ReturnBookShowModal() {
        jQuery.UIkit.modal('#return-book-modal').show();
    }
</script>
<div>
    <h3 class="uk-text-bold">Return Book</h3>
    <nav class="uk-navbar">
        <div class="uk-navbar-content">
            <div class="uk-button-group">
            </div>
        </div>
        <div class="uk-navbar-content uk-navbar-flip">
            @using (Ajax.BeginForm("SearchBorrowedBook", "", new AjaxOptions { HttpMethod = "GET", LoadingElementId = "br-loading", UpdateTargetId = "borrow-return" }, new { @class = "uk-form uk-margin-remove uk-display-inline-block" }))
            {
                <input type="text" placeholder="Search Borrowed Book" id="search" name="term" />
                <button type="submit" class="uk-button uk-button-primary uk-icon-search"></button>
            }
        </div>
    </nav>
    <table class="uk-table uk-table-hover uk-table-striped uk-table-condensed">
        <thead>
            <tr class="uk-text-center uk-text-bold">
                <th>Deadline</th>
                <th>Book Title</th>
                <th>Borrower's Name</th>
                <th>Response</th>
            </tr>
        </thead>
        <tbody>
            @if(Model.BookLogs.Count != 0)
            {
                foreach (var bookLog in Model.BookLogs)
            {
                    <tr>
                        <td>@Html.Raw(bookLog.Deadline.AddHours(8).ToString("F"))</td>
                        <td>@Html.DisplayFor(modelItem => bookLog.Book.Title)</td>
                        <td>@Html.DisplayFor(modelItem => bookLog.User.Student.FirstName) @Html.DisplayFor(modelItem => bookLog.User.Student.MiddleInitial). @Html.DisplayFor(modelItem => bookLog.User.Student.LastName)</td>
                        <td>
                            @Ajax.ActionLink("Return", "ReturnBookModal", new { id = bookLog.Id }, new AjaxOptions { HttpMethod = "GET", LoadingElementId = "br-loading", UpdateTargetId = "return-book-modal", OnSuccess = "ReturnBookShowModal()" }, new { @class = "uk-button uk-button-primary" })
                            @*@Ajax.ActionLink("Report", "ReportBookModal", new { id = bookLog.Id }, new AjaxOptions { HttpMethod = "GET", LoadingElementId = "br-loading", UpdateTargetId = "return-book-modal", OnSuccess = "ReturnBookShowModal()" }, new { @class = "uk-button uk-button-danger" })*@
                        </td>
                    </tr>
                }
            }
            else if(Model.BookLogs.Count == 0)
            {
                <tr>
                    <td class="uk-text-warning">There is no existing book to be returned</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div id="return-book-modal" class="uk-modal">
</div>